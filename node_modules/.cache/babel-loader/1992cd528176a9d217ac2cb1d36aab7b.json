{"ast":null,"code":"var _jsxFileName = \"/Users/kubansadyrov/Desktop/09-starting-project/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredLastName, setEnteredLastName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredNameTouched, setenteredNameTouched] = false;\n  const [enteredLastNameTouched, setEnteredLastNameTouched] = false;\n  const [enteredEmailTouched, setEnteredEmailTouched] = false;\n  const enteredNameIsValid = !enteredName.trim() !== '';\n  const enteredLastNameIsValid = !enteredLastName.trim() !== '';\n  const enteredEmailIsValid = !enteredEmail.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const lastnameInputIsInvalid = !enteredLastNameIsValid && enteredLastNameTouched;\n  const emailnameInputIsValid = !enteredEmailIsValid && enteredEmailTouched;\n\n  const nameInputBlurHandler = () => {\n    setenteredNameTouched(true);\n  };\n\n  const lastnameBlurHandler = () => {\n    enteredLastNameTouched(true);\n  };\n\n  const emailnameBlurHandler = () => {\n    setEnteredEmailTouched(true);\n  };\n\n  const nameInputHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const lastnameInputHandler = event => {\n    setEnteredLastName(event.target.value);\n  };\n\n  const emailInputHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setenteredNameTouched(true);\n    if (!enteredNameIsValid) return;\n    setEnteredName('');\n    setenteredNameTouched(false);\n  };\n\n  const nameInputClasss = !nameInputIsInvalid ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasss,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClasss,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: nameInputHandler,\n          onBlur: nameInputBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastnameInputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: emailInputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n};\n\n_s(BasicForm, \"C5RSBy+ZCCkY2EJJF0Au2vLqiB4=\");\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/kubansadyrov/Desktop/09-starting-project/src/components/BasicForm.js"],"names":["useState","BasicForm","props","enteredName","setEnteredName","enteredLastName","setEnteredLastName","enteredEmail","setEnteredEmail","enteredNameTouched","setenteredNameTouched","enteredLastNameTouched","setEnteredLastNameTouched","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","enteredLastNameIsValid","enteredEmailIsValid","nameInputIsInvalid","lastnameInputIsInvalid","emailnameInputIsValid","nameInputBlurHandler","lastnameBlurHandler","emailnameBlurHandler","nameInputHandler","event","target","value","lastnameInputHandler","emailInputHandler","formSubmitHandler","preventDefault","nameInputClasss"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\nconst BasicForm = (props) => {\n\tconst [enteredName, setEnteredName] = useState('')\n\tconst [enteredLastName, setEnteredLastName] = useState('')\n\tconst [enteredEmail, setEnteredEmail] = useState('')\n\tconst [enteredNameTouched, setenteredNameTouched] = false\n\tconst [enteredLastNameTouched, setEnteredLastNameTouched] = (false)\n\tconst [enteredEmailTouched, setEnteredEmailTouched] = (false)\n\n\tconst enteredNameIsValid = !enteredName.trim() !== ''\n  const enteredLastNameIsValid = !enteredLastName.trim() !== ''\n  const enteredEmailIsValid = !enteredEmail.trim() !== '' \n\n\tconst nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched\n  const lastnameInputIsInvalid = !enteredLastNameIsValid && enteredLastNameTouched\n  const emailnameInputIsValid = !enteredEmailIsValid && enteredEmailTouched\n\n  const nameInputBlurHandler = () => {\n\t\tsetenteredNameTouched(true)\n\t};\n  const lastnameBlurHandler = () => {\n    enteredLastNameTouched(true)\n  } \n  const emailnameBlurHandler = () => {\n    setEnteredEmailTouched(true)\n  }\n\n\tconst nameInputHandler = (event) => {\n\t\tsetEnteredName(event.target.value)\n\t}\n\tconst lastnameInputHandler = (event) => {\n\t\tsetEnteredLastName(event.target.value)\n\t}\n\tconst emailInputHandler = (event) => {\n\t\tsetEnteredEmail(event.target.value)\n\t}\n\n\tconst formSubmitHandler = (event) => {\n\t\tevent.preventDefault()\n\t\tsetenteredNameTouched(true)\n    \n\t\tif (!enteredNameIsValid) return\n\t\tsetEnteredName('')\n\t\tsetenteredNameTouched(false)\n\t}\n\n\tconst nameInputClasss = !nameInputIsInvalid\n\t\t? 'form-control'\n\t\t: 'form-control invalid'\n\n\treturn (\n\t\t<form onSubmit={formSubmitHandler}>\n\t\t\t<div className={nameInputClasss}>\n\t\t\t\t<div className={nameInputClasss}>\n\t\t\t\t\t<label htmlFor='name'>First Name</label>\n\t\t\t\t\t<input \n            type='text' \n            id='name' \n            onChange={nameInputHandler} \n            onBlur={nameInputBlurHandler}\n          />\n          {nameInputIsInvalid && <p>Name must not be empty</p>}\n\t\t\t\t</div>\n\t\t\t\t<div className='form-control'>\n\t\t\t\t\t<label htmlFor='name'>Last Name</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tid='name'\n\t\t\t\t\t\tonChange={lastnameInputHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='form-control'>\n\t\t\t\t<label htmlFor='name'>E-Mail Address</label>\n\t\t\t\t<input type='text' id='name' onChange={emailInputHandler} />\n\t\t\t</div>\n\t\t\t<div className='form-actions'>\n\t\t\t\t<button>Submit</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nexport default BasicForm\n"]},"metadata":{},"sourceType":"module"}