{"ast":null,"code":"var _jsxFileName = \"/Users/kubansadyrov/Desktop/09-starting-project/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredLastName, setEnteredLastName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredNameTouched, setenteredNameTouched] = useState(false);\n  const [enteredLastNameTouched, setEnteredLastNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const enteredLastNameIsValid = enteredLastName.trim() !== '';\n  const enteredEmailIsValid = enteredEmail.trim() !== '';\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched;\n  const lastnameInputIsInValid = !enteredLastNameIsValid && enteredLastNameTouched;\n  const emailnameInputIsValid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputBlurHandler = () => {\n    setenteredNameTouched(true);\n  };\n\n  const lastnameBlurHandler = () => {\n    enteredLastNameTouched(true);\n  };\n\n  const emailnameBlurHandler = () => {\n    setEnteredEmailTouched(true);\n  };\n\n  const nameInputHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const lastnameInputHandler = event => {\n    setEnteredLastName(event.target.value);\n  };\n\n  const emailInputHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setenteredNameTouched(true);\n    setEnteredLastNameTouched(true);\n    setEnteredEmailTouched(true);\n    if (!enteredNameIsValid && !enteredLastNameIsValid && !enteredEmailIsValid) return;\n    setEnteredName('');\n    setEnteredLastName('');\n    setEnteredEmail('');\n    setenteredNameTouched(false);\n    setEnteredLastNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasss = !nameInputIsInValid ? 'form-control' : 'form-control invalid';\n  const lastnameInputClass = !lastnameInputIsInValid ? 'form-control' : 'form-control invalid';\n  const emailnameInputClass = !emailnameInputIsValid ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredName,\n          onChange: nameInputHandler,\n          onBlur: nameInputBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastnameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredLastName,\n          onChange: lastnameInputHandler,\n          onBlur: lastnameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this), lastnameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailnameInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredEmail,\n        onChange: emailInputHandler,\n        onBlur: emailnameBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), emailnameInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n};\n\n_s(BasicForm, \"Tu2WNjfTqP1rYdWLGwnibMWzZqc=\");\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/kubansadyrov/Desktop/09-starting-project/src/components/BasicForm.js"],"names":["useState","BasicForm","props","enteredName","setEnteredName","enteredLastName","setEnteredLastName","enteredEmail","setEnteredEmail","enteredNameTouched","setenteredNameTouched","enteredLastNameTouched","setEnteredLastNameTouched","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","enteredLastNameIsValid","enteredEmailIsValid","nameInputIsInValid","lastnameInputIsInValid","emailnameInputIsValid","formIsValid","nameInputBlurHandler","lastnameBlurHandler","emailnameBlurHandler","nameInputHandler","event","target","value","lastnameInputHandler","emailInputHandler","formSubmitHandler","preventDefault","nameInputClasss","lastnameInputClass","emailnameInputClass","nameInputIsInvalid","lastnameInputIsInvalid"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\nconst BasicForm = (props) => {\n\tconst [enteredName, setEnteredName] = useState('')\n\tconst [enteredLastName, setEnteredLastName] = useState('')\n\tconst [enteredEmail, setEnteredEmail] = useState('')\n\tconst [enteredNameTouched, setenteredNameTouched] = useState(false)\n\tconst [enteredLastNameTouched, setEnteredLastNameTouched] = useState(false)\n\tconst [enteredEmailTouched, setEnteredEmailTouched] = useState(false)\n\n\tconst enteredNameIsValid = enteredName.trim() !== ''\n  const enteredLastNameIsValid = enteredLastName.trim() !== ''\n  const enteredEmailIsValid = enteredEmail.trim() !== '' \n\n\tconst nameInputIsInValid = !enteredNameIsValid && enteredNameTouched\n  const lastnameInputIsInValid = !enteredLastNameIsValid && enteredLastNameTouched\n  const emailnameInputIsValid = !enteredEmailIsValid && enteredEmailTouched\n\n  let formIsValid = false\n  if(enteredNameIsValid && enteredLastNameIsValid && enteredEmailIsValid){\n    formIsValid = true\n  }\n\n  const nameInputBlurHandler = () => {\n\t\tsetenteredNameTouched(true)\n\t};\n  const lastnameBlurHandler = () => {\n    enteredLastNameTouched(true)\n  } \n  const emailnameBlurHandler = () => {\n    setEnteredEmailTouched(true)\n  }\n\n\tconst nameInputHandler = (event) => {\n\t\tsetEnteredName(event.target.value)\n\t}\n\tconst lastnameInputHandler = (event) => {\n\t\tsetEnteredLastName(event.target.value)\n\t}\n\tconst emailInputHandler = (event) => {\n\t\tsetEnteredEmail(event.target.value)\n\t}\n\n\tconst formSubmitHandler = (event) => {\n\t\tevent.preventDefault()\n\t\tsetenteredNameTouched(true)\n    setEnteredLastNameTouched(true)\n    setEnteredEmailTouched(true)\n\t\tif (!enteredNameIsValid && !enteredLastNameIsValid && !enteredEmailIsValid) return;\n\t\tsetEnteredName('')\n    setEnteredLastName('')\n    setEnteredEmail('')\n\t\tsetenteredNameTouched(false)\n    setEnteredLastNameTouched(false)\n    setEnteredEmailTouched(false)\n\t}\n\n\tconst nameInputClasss = !nameInputIsInValid\n\t\t? 'form-control'\n\t\t: 'form-control invalid'\n  const lastnameInputClass = !lastnameInputIsInValid\n    ? 'form-control'\n\t\t: 'form-control invalid'\n  const emailnameInputClass = !emailnameInputIsValid\n    ? 'form-control'\n    : 'form-control invalid'\n\treturn (\n\t\t<form onSubmit={formSubmitHandler}>\n\t\t\t<div  className='control-group'>\n\t\t\t\t<div>\n\t\t\t\t\t<label htmlFor='name'>First Name</label>\n\t\t\t\t\t<input \n            type='text' \n            id='name' \n            value={enteredName}\n            onChange={nameInputHandler} \n            onBlur={nameInputBlurHandler}\n          />\n          {nameInputIsInvalid && <p>Name must not be empty</p>}\n\t\t\t\t</div>\n\t\t\t\t<div className={lastnameInputClass}>\n\t\t\t\t\t<label htmlFor='name'>Last Name</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tid='name'\n            value={enteredLastName}\n\t\t\t\t\t\tonChange={lastnameInputHandler}\n            onBlur={lastnameBlurHandler}\n\t\t\t\t\t/>\n          {lastnameInputIsInvalid && <p>Name must not be empty</p>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={emailnameInputClass}>\n\t\t\t\t<label htmlFor='name'>E-Mail Address</label>\n\t\t\t\t<input \n            type='text' \n            id='name' \n            value={enteredEmail}\n            onChange={emailInputHandler} \n            onBlur={emailnameBlurHandler}\n          />\n          {emailnameInputIsValid && <p>Name must not be empty</p>}\n\t\t\t</div>\n\t\t\t<div className='form-actions'>\n\t\t\t\t<button disabled={!formIsValid} type='submit'>Submit</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nexport default BasicForm\n"]},"metadata":{},"sourceType":"module"}