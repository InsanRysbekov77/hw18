{"ast":null,"code":"// import { useEffect, useRef, useState } from 'react'\n// const SimpleInput = () => {\n// \tconst [enteredName, setEnteredName] = useState('')\n// \tconst [enteredNameTouched, setenteredNameTouched] = useState(false)\n// \tconst [formIsValid, setformIsValid] = useState(false)\n// \t const enteredNameIsValid = enteredName.trim() !== '' // true fasle деген значенияны сактайт\n// \t const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched\n// \t if(enteredNameIsValid){\n// \t\t setformIsValid(false)\n// \t }else(\n// \t\t setformIsValid(true)\n// \t )\n// \t//  useEffect(() => {\n// \t// \t if(enteredNameIsValid) {\n// \t// \t\t setformIsValid(true)\n// \t// \t }else{\n// \t// \t\t setformIsValid(false)\n// \t// \t }\n// \t//  }, [enteredNameIsValid])\n// \tconst nameInputBlurHandler = (event) => {\n// \t\tsetenteredNameTouched(true)\n// \t};\n// \tconst nameInputHandler = (event) => {  \n// \t\tsetEnteredName(event.target.value) \n// \t}\n// \tconst fromSubmitHandler = (event) => {\n// \t\tevent.preventDefault()\n// \t\tsetenteredNameTouched(true)\n// \t\tif(!enteredNameIsValid) return;\n// \t\tsetEnteredName('')\n// \t\tsetenteredNameTouched(false)\n// \t}\n// \tconst nameInputClass = !nameInputIsInvalid\n// \t\t? 'form-control'\n// \t\t: 'form-control invalid'\n// \treturn (\n// \t\t<form onSubmit={fromSubmitHandler}>\n// \t\t\t<div className={nameInputClass}>\n// \t\t\t\t{console.log(enteredName)}\n// \t\t\t\t<label htmlFor='name'>Your Name</label>\n// \t\t\t\t<input\n// \t\t\t\t    value={enteredName}\n// \t\t\t\t\ttype='text'\n// \t\t\t\t\tid='name'\n// \t\t\t\t\tonChange={nameInputHandler}\n// \t\t\t\t\tonBlur={nameInputBlurHandler}\n// \t\t\t\t/>\n// \t\t\t\t{nameInputIsInvalid && <p>Name must not be empty</p>}\n// \t\t\t</div>\n// \t\t\t<div className='form-actions'>\n// \t\t\t\t<button disabled={!formIsValid}>Submit</button>\n// \t\t\t</div>\n// \t\t</form>\n// \t)\n// }\n// export default SimpleInput","map":{"version":3,"sources":["/Users/kubansadyrov/Desktop/09-starting-project/src/components/SimpleInput.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import { useEffect, useRef, useState } from 'react'\n\n// const SimpleInput = () => {\n// \tconst [enteredName, setEnteredName] = useState('')\n// \tconst [enteredNameTouched, setenteredNameTouched] = useState(false)\n// \tconst [formIsValid, setformIsValid] = useState(false)\n\n// \t const enteredNameIsValid = enteredName.trim() !== '' // true fasle деген значенияны сактайт\n// \t const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched\n\n// \t if(enteredNameIsValid){\n// \t\t setformIsValid(false)\n// \t }else(\n// \t\t setformIsValid(true)\n// \t )\n\n// \t//  useEffect(() => {\n// \t// \t if(enteredNameIsValid) {\n// \t// \t\t setformIsValid(true)\n// \t// \t }else{\n// \t// \t\t setformIsValid(false)\n// \t// \t }\n// \t//  }, [enteredNameIsValid])\n\n// \tconst nameInputBlurHandler = (event) => {\n// \t\tsetenteredNameTouched(true)\n// \t};\n\n// \tconst nameInputHandler = (event) => {  \n// \t\tsetEnteredName(event.target.value) \n// \t}\n\n// \tconst fromSubmitHandler = (event) => {\n// \t\tevent.preventDefault()\n// \t\tsetenteredNameTouched(true)\n// \t\tif(!enteredNameIsValid) return;\n// \t\tsetEnteredName('')\n// \t\tsetenteredNameTouched(false)\n// \t}\n// \tconst nameInputClass = !nameInputIsInvalid\n// \t\t? 'form-control'\n// \t\t: 'form-control invalid'\n\n// \treturn (\n// \t\t<form onSubmit={fromSubmitHandler}>\n// \t\t\t<div className={nameInputClass}>\n// \t\t\t\t{console.log(enteredName)}\n// \t\t\t\t<label htmlFor='name'>Your Name</label>\n// \t\t\t\t<input\n// \t\t\t\t    value={enteredName}\n// \t\t\t\t\ttype='text'\n// \t\t\t\t\tid='name'\n// \t\t\t\t\tonChange={nameInputHandler}\n// \t\t\t\t\tonBlur={nameInputBlurHandler}\n// \t\t\t\t/>\n// \t\t\t\t{nameInputIsInvalid && <p>Name must not be empty</p>}\n// \t\t\t</div>\n// \t\t\t<div className='form-actions'>\n// \t\t\t\t<button disabled={!formIsValid}>Submit</button>\n// \t\t\t</div>\n// \t\t</form>\n// \t)\n// }\n\n// export default SimpleInput\n"]},"metadata":{},"sourceType":"module"}