{"ast":null,"code":"var _jsxFileName = \"/Users/kubansadyrov/Desktop/09-starting-project/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = () => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameValid, setenteredNameValid] = useState(false);\n  const [enteredNameTouched, setenteredNameTouched] = useState(false);\n  const nameInputRef = useRef(null);\n\n  const nameInputBlurHandler = event => {\n    setenteredNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setenteredNameValid(false);\n      return;\n    }\n\n    setenteredNameValid(true);\n  };\n\n  const nameInputHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const fromSubmitHandler = event => {\n    event.preventDefault();\n    setenteredNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setenteredNameValid(false);\n      return;\n    }\n\n    setenteredNameValid(true);\n    const enteredValueRef = nameInputRef.current.value;\n    console.log(enteredValueRef);\n    setEnteredName('');\n  };\n\n  const nameInputIsInvalid = !enteredNameValid && enteredNameTouched;\n  const nameInputClass = !nameInputIsInvalid ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: fromSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClass,\n      children: [console.log(enteredName), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: enteredName,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        ref: nameInputRef,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SimpleInput, \"kjwtwlZ6/SCW49MNFYzxtqmEZ5Q=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/kubansadyrov/Desktop/09-starting-project/src/components/SimpleInput.js"],"names":["useRef","useState","SimpleInput","enteredName","setEnteredName","enteredNameValid","setenteredNameValid","enteredNameTouched","setenteredNameTouched","nameInputRef","nameInputBlurHandler","event","trim","nameInputHandler","target","value","fromSubmitHandler","preventDefault","enteredValueRef","current","console","log","nameInputIsInvalid","nameInputClass"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAMQ,YAAY,GAAGT,MAAM,CAAC,IAAD,CAA3B;;AAEA,QAAMU,oBAAoB,GAAIC,KAAD,IAAW;AACvCH,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACG,QAAIL,WAAW,CAACS,IAAZ,OAAuB,EAA3B,EAA8B;AAChCN,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACA;AACA;;AACDA,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACA,GAPD;;AASA,QAAMO,gBAAgB,GAAIF,KAAD,IAAW;AACnCP,IAAAA,cAAc,CAACO,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAd;AACA,GAFD;;AAIA,QAAMC,iBAAiB,GAAIL,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACM,cAAN;AACAT,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACA,QAAIL,WAAW,CAACS,IAAZ,OAAuB,EAA3B,EAA+B;AAC9BN,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACA;AACA;;AACDA,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACA,UAAMY,eAAe,GAAGT,YAAY,CAACU,OAAb,CAAqBJ,KAA7C;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ;AACAd,IAAAA,cAAc,CAAC,EAAD,CAAd;AACA,GAXD;;AAYA,QAAMkB,kBAAkB,GAAI,CAACjB,gBAAD,IAAqBE,kBAAjD;AACA,QAAMgB,cAAc,GAAG,CAACD,kBAAD,GACpB,cADoB,GAEpB,sBAFH;AAIA,sBACC;AAAM,IAAA,QAAQ,EAAEN,iBAAhB;AAAA,4BACC;AAAK,MAAA,SAAS,EAAEO,cAAhB;AAAA,iBACEH,OAAO,CAACC,GAAR,CAAYlB,WAAZ,CADF,eAEC;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AACI,QAAA,KAAK,EAAEA,WADX;AAEC,QAAA,IAAI,EAAC,MAFN;AAGC,QAAA,EAAE,EAAC,MAHJ;AAIC,QAAA,QAAQ,EAAEU,gBAJX;AAKC,QAAA,GAAG,EAAEJ,YALN;AAMC,QAAA,MAAM,EAAEC;AANT;AAAA;AAAA;AAAA;AAAA,cAHD,EAWEY,kBAAkB,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAcC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAdD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAoBA,CAxDD;;GAAMpB,W;;KAAAA,W;AA0DN,eAAeA,WAAf","sourcesContent":["import { useRef, useState } from 'react'\n\nconst SimpleInput = () => {\n\tconst [enteredName, setEnteredName] = useState('')\n\tconst [enteredNameValid, setenteredNameValid] = useState(false)\n\tconst [enteredNameTouched, setenteredNameTouched] = useState(false)\n\tconst nameInputRef = useRef(null)\n\n\tconst nameInputBlurHandler = (event) => {\n\t\tsetenteredNameTouched(true)\n\t    if (enteredName.trim() === ''){\n\t\t\tsetenteredNameValid(false)\n\t\t\treturn;\n\t\t}\n\t\tsetenteredNameValid(true)\n\t};\n\n\tconst nameInputHandler = (event) => {  \n\t\tsetEnteredName(event.target.value)\n\t}\n\n\tconst fromSubmitHandler = (event) => {\n\t\tevent.preventDefault()\n\t\tsetenteredNameTouched(true)\n\t\tif (enteredName.trim() === '') {\n\t\t\tsetenteredNameValid(false)\n\t\t\treturn\n\t\t}\n\t\tsetenteredNameValid(true)\n\t\tconst enteredValueRef = nameInputRef.current.value\n\t\tconsole.log(enteredValueRef)\n\t\tsetEnteredName('')\n\t}\n\tconst nameInputIsInvalid =  !enteredNameValid && enteredNameTouched\n\tconst nameInputClass = !nameInputIsInvalid\n\t\t? 'form-control'\n\t\t: 'form-control invalid'\n\n\treturn (\n\t\t<form onSubmit={fromSubmitHandler}>\n\t\t\t<div className={nameInputClass}>\n\t\t\t\t{console.log(enteredName)}\n\t\t\t\t<label htmlFor='name'>Your Name</label>\n\t\t\t\t<input\n\t\t\t\t    value={enteredName}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='name'\n\t\t\t\t\tonChange={nameInputHandler}\n\t\t\t\t\tref={nameInputRef}\n\t\t\t\t\tonBlur={nameInputBlurHandler}\n\t\t\t\t/>\n\t\t\t\t{nameInputIsInvalid && <p>Name must not be empty</p>}\n\t\t\t</div>\n\t\t\t<div className='form-actions'>\n\t\t\t\t<button>Submit</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nexport default SimpleInput\n"]},"metadata":{},"sourceType":"module"}